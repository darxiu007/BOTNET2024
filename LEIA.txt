Execute install Python

nstale os requisitos do Python:

pip install -r requirements.txt
Inicialize o banco de dados:

cd server
./ares.py initdb
Para compilar agentes Windows no Linux, configure o wine (opcional):

./wine_setup.sh
Servidor
Execute com o servidor integrado (depuração):

./ares.py runserver -h 0.0.0.0 -p 8080 --threaded
Ou execute usando gunicorn:

gunicorn ares:app -b 0.0.0.0:8080 --threads 20
O servidor agora deve estar acessível em http://localhost:8080

Agente
Execute o agente Python (atualize config.py para atender às suas necessidades):

cd agent
./agent.py
Crie um novo agente para um binário independente:

./builder.py -p Linux --server http://localhost:8080 -o agent
./agent
Para ver uma lista de opções suportadas, execute ./builder.py -h

./agent/builder.py -h
usage: builder.py [-h] -p PLATFORM --server SERVER -o OUTPUT
                  [--hello-interval HELLO_INTERVAL] [--idle_time IDLE_TIME]
                  [--max_failed_connections MAX_FAILED_CONNECTIONS]
                  [--persistent]

Builds an Ares agent.

optional arguments:
  -h, --help            show this help message and exit
  -p PLATFORM, --platform PLATFORM
                        Target platform (Windows, Linux).
  --server SERVER       Address of the CnC server (e.g http://localhost:8080).
  -o OUTPUT, --output OUTPUT
                        Output file name.
  --hello-interval HELLO_INTERVAL
                        Delay (in seconds) between each request to the CnC.
  --idle_time IDLE_TIME
                        Inactivity time (in seconds) after which to go idle.
                        In idle mode, the agent pulls commands less often
                        (every <hello_interval> seconds).
  --max_failed_connections MAX_FAILED_CONNECTIONS
                        The agent will self destruct if no contact with the
                        CnC can be made <max_failed_connections> times in a
                        row.
  --persistent          Automatically install the agent on first run.
Comandos de agente suportados
<any shell command>
Executes the command in a shell and return its output.

upload <local_file>
Uploads <local_file> to server.

download <url> <destination>
Downloads a file through HTTP(S).

zip <archive_name> <folder>
Creates a zip archive of the folder.

screenshot
Takes a screenshot.

python <command|file>
Runs a Python command or local file.

persist
Installs the agent.

clean
Uninstalls the agent.

exit
Kills the agent.

help
This help.